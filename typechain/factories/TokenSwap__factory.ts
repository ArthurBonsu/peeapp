/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenSwap, TokenSwapInterface } from "../TokenSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenABC",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenXYZ",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTokensABC",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTokensXYZ",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_Fees",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ratio",
        type: "uint256",
      },
    ],
    name: "setRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountTKA",
        type: "uint256",
      },
    ],
    name: "swapTKA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountTKX",
        type: "uint256",
      },
    ],
    name: "swapTKX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenABC",
    outputs: [
      {
        internalType: "contract TokenABC",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenXYZ",
    outputs: [
      {
        internalType: "contract TokenXYZ",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001adc38038062001adc8339818101604052810190620000379190620003f8565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015620001a157600080fd5b505afa158015620001b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001dc919062000465565b6040518363ffffffff1660e01b8152600401620001fb929190620004b3565b602060405180830381600087803b1580156200021657600080fd5b505af11580156200022b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000251919062000439565b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015620002fa57600080fd5b505afa1580156200030f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000335919062000465565b6040518363ffffffff1660e01b815260040162000354929190620004b3565b602060405180830381600087803b1580156200036f57600080fd5b505af115801562000384573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003aa919062000439565b50505062000578565b600081519050620003c4816200052a565b92915050565b600081519050620003db8162000544565b92915050565b600081519050620003f2816200055e565b92915050565b600080604083850312156200040c57600080fd5b60006200041c85828601620003b3565b92505060206200042f85828601620003b3565b9150509250929050565b6000602082840312156200044c57600080fd5b60006200045c84828501620003ca565b91505092915050565b6000602082840312156200047857600080fd5b60006200048884828501620003e1565b91505092915050565b6200049c81620004e0565b82525050565b620004ad8162000520565b82525050565b6000604082019050620004ca600083018562000491565b620004d96020830184620004a2565b9392505050565b6000620004ed8262000500565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200053581620004e0565b81146200054157600080fd5b50565b6200054f81620004f4565b81146200055b57600080fd5b50565b620005698162000520565b81146200057557600080fd5b50565b61155480620005886000396000f3fe6080604052600436106100915760003560e01c8063ad20f47011610059578063ad20f4701461018f578063b2237ba3146101ab578063db8d55f1146101d4578063ec1ebd7a146101ff578063f62b77d71461022a57610091565b80633d18678e146100965780635f70662d146100bf5780637226d2c3146100ea57806394e6d1a214610127578063aaea238214610164575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610e6c565b610246565b005b3480156100cb57600080fd5b506100d461025c565b6040516100e19190611062565b60405180910390f35b3480156100f657600080fd5b50610111600480360381019061010c9190610e6c565b610282565b60405161011e919061113d565b60405180910390f35b34801561013357600080fd5b5061014e60048036038101906101499190610e6c565b610737565b60405161015b919061113d565b60405180910390f35b34801561017057600080fd5b50610179610bf3565b6040516101869190611047565b60405180910390f35b6101a960048036038101906101a49190610e6c565b610c19565b005b3480156101b757600080fd5b506101d260048036038101906101cd9190610e6c565b610cb6565b005b3480156101e057600080fd5b506101e9610ccc565b6040516101f6919061113d565b60405180910390f35b34801561020b57600080fd5b50610214610ce3565b604051610221919061113d565b60405180910390f35b610244600480360381019061023f9190610e6c565b610cfa565b005b60008054906101000a9050508060038190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008082116102c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bd906110fd565b60405180910390fd5b81600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103229190610fcc565b60206040518083038186803b15801561033a57600080fd5b505afa15801561034e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103729190610e95565b10156103b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103aa906110dd565b60405180910390fd5b60006103c183600154610d97565b9050600060646103d383600354610d97565b6103dd9190611169565b826103e891906111f4565b90506000811161042d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104249061109d565b60405180910390fd5b80600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104899190610fcc565b60206040518083038186803b1580156104a157600080fd5b505afa1580156104b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d99190610e95565b11610519576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610510906110bd565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161057893929190610fe7565b602060405180830381600087803b15801561059257600080fd5b505af11580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca9190610e43565b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333836040518363ffffffff1660e01b815260040161062892919061101e565b602060405180830381600087803b15801561064257600080fd5b505af1158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190610e43565b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b81526004016106da93929190610fe7565b602060405180830381600087803b1580156106f457600080fd5b505af1158015610708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c9190610e43565b508092505050919050565b600060015482101561077e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107759061111d565b60405180910390fd5b81600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107da9190610fcc565b60206040518083038186803b1580156107f257600080fd5b505afa158015610806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082a9190610e95565b101561086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110dd565b60405180910390fd5b60006001548361087b9190611169565b9050600060646003548361088f919061119a565b6108999190611169565b826108a491906111f4565b9050600081116108e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e09061109d565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109459190610fcc565b60206040518083038186803b15801561095d57600080fd5b505afa158015610971573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109959190610e95565b116109d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cc906110bd565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610a3493929190610fe7565b602060405180830381600087803b158015610a4e57600080fd5b505af1158015610a62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a869190610e43565b50600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333836040518363ffffffff1660e01b8152600401610ae492919061101e565b602060405180830381600087803b158015610afe57600080fd5b505af1158015610b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b369190610e43565b50600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b8152600401610b9693929190610fe7565b602060405180830381600087803b158015610bb057600080fd5b505af1158015610bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be89190610e43565b508092505050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633610724e34836040518363ffffffff1660e01b8152600401610c81919061113d565b6000604051808303818588803b158015610c9a57600080fd5b505af1158015610cae573d6000803e3d6000fd5b505050505050565b60008054906101000a9050508060018190555050565b60008060009054906101000a905050600354905090565b60008060009054906101000a905050600154905090565b60008054906101000a905050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633610724e34836040518363ffffffff1660e01b8152600401610d62919061113d565b6000604051808303818588803b158015610d7b57600080fd5b505af1158015610d8f573d6000803e3d6000fd5b505050505050565b600080821480610dbf575082828385610db0919061119a565b925082610dbd9190611169565b145b610dfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df59061107d565b60405180910390fd5b92915050565b600081519050610e13816114f0565b92915050565b600081359050610e2881611507565b92915050565b600081519050610e3d81611507565b92915050565b600060208284031215610e5557600080fd5b6000610e6384828501610e04565b91505092915050565b600060208284031215610e7e57600080fd5b6000610e8c84828501610e19565b91505092915050565b600060208284031215610ea757600080fd5b6000610eb584828501610e2e565b91505092915050565b610ec781611228565b82525050565b610ed681611270565b82525050565b610ee581611294565b82525050565b6000610ef8601483611158565b9150610f0382611316565b602082019050919050565b6000610f1b602983611158565b9150610f268261133f565b604082019050919050565b6000610f3e604c83611158565b9150610f498261138e565b606082019050919050565b6000610f61602183611158565b9150610f6c82611403565b604082019050919050565b6000610f84602383611158565b9150610f8f82611452565b604082019050919050565b6000610fa7602483611158565b9150610fb2826114a1565b604082019050919050565b610fc681611266565b82525050565b6000602082019050610fe16000830184610ebe565b92915050565b6000606082019050610ffc6000830186610ebe565b6110096020830185610ebe565b6110166040830184610fbd565b949350505050565b60006040820190506110336000830185610ebe565b6110406020830184610fbd565b9392505050565b600060208201905061105c6000830184610ecd565b92915050565b60006020820190506110776000830184610edc565b92915050565b6000602082019050818103600083015261109681610eeb565b9050919050565b600060208201905081810360008301526110b681610f0e565b9050919050565b600060208201905081810360008301526110d681610f31565b9050919050565b600060208201905081810360008301526110f681610f54565b9050919050565b6000602082019050818103600083015261111681610f77565b9050919050565b6000602082019050818103600083015261113681610f9a565b9050919050565b60006020820190506111526000830184610fbd565b92915050565b600082825260208201905092915050565b600061117482611266565b915061117f83611266565b92508261118f5761118e6112e7565b5b828204905092915050565b60006111a582611266565b91506111b083611266565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156111e9576111e86112b8565b5b828202905092915050565b60006111ff82611266565b915061120a83611266565b92508282101561121d5761121c6112b8565b5b828203905092915050565b600061123382611246565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061127b82611282565b9050919050565b600061128d82611246565b9050919050565b600061129f826112a6565b9050919050565b60006112b182611246565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000600082015250565b7f65786368616e676520416d6f756e74206d75737420626520677265617465722060008201527f7468656e207a65726f0000000000000000000000000000000000000000000000602082015250565b7f63757272656e746c79207468652065786368616e676520646f65736e7420686160008201527f766520656e6f7567682058595a20546f6b656e732c20706c656173652072657460208201527f7279206c61746572203a3d280000000000000000000000000000000000000000604082015250565b7f73656e64657220646f65736e2774206861766520656e6f75676820546f6b656e60008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f616d6f756e74544b41206d7573742062652067726561746572207468656e207a60008201527f65726f0000000000000000000000000000000000000000000000000000000000602082015250565b7f616d6f756e74544b58206d7573742062652067726561746572207468656e207260008201527f6174696f00000000000000000000000000000000000000000000000000000000602082015250565b6114f98161123a565b811461150457600080fd5b50565b61151081611266565b811461151b57600080fd5b5056fea264697066735822122037b3da7dc0d92aeab23c1b534c12c11aa08bcc440de7c33361ea612402387e1564736f6c63430008020033";

type TokenSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenSwap__factory extends ContractFactory {
  constructor(...args: TokenSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TokenSwap";
  }

  deploy(
    _tokenABC: string,
    _tokenXYZ: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenSwap> {
    return super.deploy(
      _tokenABC,
      _tokenXYZ,
      overrides || {}
    ) as Promise<TokenSwap>;
  }
  getDeployTransaction(
    _tokenABC: string,
    _tokenXYZ: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenABC, _tokenXYZ, overrides || {});
  }
  attach(address: string): TokenSwap {
    return super.attach(address) as TokenSwap;
  }
  connect(signer: Signer): TokenSwap__factory {
    return super.connect(signer) as TokenSwap__factory;
  }
  static readonly contractName: "TokenSwap";
  public readonly contractName: "TokenSwap";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenSwapInterface {
    return new utils.Interface(_abi) as TokenSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenSwap {
    return new Contract(address, _abi, signerOrProvider) as TokenSwap;
  }
}
